:root {
  --container: 1024px;
  --font-size: 14px;
  --borders: 1px;
  --stroke-width: 1px;
  --media-sm: 576px;
  --media-md: 768px;
  --media-lg: 922px;
  --media-elg: 1200px;
  --color: hsl( 200, 10%, 8% );
  --color-bright: hsl( 200, 10%, 12% );
  --color-fade: hsl( 200, 10%, 50% );
  --bg: hsl( 200, 10%, 90% );
  --bg-pop: hsl( 200, 10%, 100% );
  --bg-sink: hsl( 200, 10%, 50% ); }

.dark {
  --bg: hsl( 200, 10%, 10% );
  --bg-pop: hsl( 200, 10%, 12% );
  --bg-sink: hsl( 200, 10%, 2% );
  --color: hsl( 200, 10%, 90% );
  --color-bright: hsl( 200, 10%, 100% );
  --color-fade: hsl( 200, 10%, 50% ); }

@media only screen and (max-width: 576px) {
  :root {
    --font-size: 16px; } }

:root {
  --f0: 0.785714rem;
  --f1: 1rem;
  --f2: 1.2857rem;
  --f3: 1.64285rem;
  --f4: 2.071428rem;
  --f5: 2.642857rem;
  --column-spacing: 2em;
  --icon-padding: 2.2em;
  --input-padding: 0.6em 1em;
  --button-padding: 1em 3em;
  --font: 'b-a-s-i-s-g-r-o-s', sans-serif;
  --font-monospace: monospace;
  --font-serif: serif;
  --font-sans-serif: sans-serif;
  --font-cursive: cursive;
  --font-slab: sans-serif;
  --font-grotesque: sans-serif;
  --line-height: 1.61803398875em;
  --color-success: hsl( 150, 95%, 70% );
  --color-info: hsl( 200, 95%, 70% );
  --color-error: hsl( 340, 95%, 70% );
  --color-alert: hsl( 50, 95%, 70% );
  --bg-a: hsl( 300, 20%, 10% );
  --bg-b: hsl( 300, 20%, 15% );
  --bg-c: hsl( 300, 20%, 20% );
  --bg-d: hsl( 300, 20%, 25% );
  --bg-e: hsl( 300, 20%, 30% );
  --color-a: hsl( 0, 90%, 75% );
  --color-b: hsl( 80, 90%, 75% );
  --color-c: hsl( 160, 90%, 75% );
  --color-d: hsl( 240, 90%, 75% );
  --color-e: hsl( 320, 90%, 75% );
  --code: hsl( 200, 10%, 90% );
  --code-operator: hsl( 200, 10%, 60% );
  --code-punctuation: hsl( 290, 95%, 70% );
  --code-number: hsl( 220, 95%, 80% );
  --code-atrule: hsl( 180, 95%, 70% );
  --code-cdata: hsl( 0, 95%, 70% );
  --code-namespace: hsl( 60, 95%, 70% );
  --code-property: hsl( 90, 95%, 70% );
  --code-selector: hsl( 170, 95%, 70% );
  --code-keyboard: hsl( 260, 95%, 70% );
  --code-regex: hsl( 300, 95%, 70% ); }

/* core sassis */
html {
  font-size: var(--font-size); }

* {
  -webkit-appearance: none;
  box-sizing: border-box;
  transform-origin: 50% 50%; }

a {
  text-decoration: none; }

body, div, span, object, iframe, h1, h2, h4, p, a, address, code, em, img, s, var, center, form, label, article, canvas, embed, footer, header, nav, output, section, time, audio, video {
  margin: 0;
  padding: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, footer, header, nav, section {
  display: block; }

body {
  width: 100%;
  height: 100%; }

.sassis, button, input, * {
  font-family: var(--font);
  font-size: 1rem;
  line-height: var(--line-height); }

/* ---------------------- EVERYTHING ---------------------- */
*, *:after, *:before, input {
  border-style: solid;
  border-width: 0;
  background: transparent;
  border-radius: 0px;
  font-weight: normal; }

 input[type=text], input[type=email] {
  padding: var(--input-padding);
  flex-basis: 0; }

a {
  text-decoration: none; }

a {
  cursor: pointer; }

input, button, .button {
  white-space: nowrap; }

button, .button {
  text-align: center;
  padding: var(--button-padding); }

 input, button, .button {
  border-width: var(--stroke-width);
  outline: none; }
   input:disabled, input:disabled + span, button:disabled, button:disabled + span, .button:disabled, .button:disabled + span {
    opacity: 0.5; }

/* ---------------------- SELECT + CHEVRONS ---------------------- */

/* ---------------------- FILE ---------------------- */

/* ---------------------- INPUT RANGE ---------------------- */

/* ---------------------- INPUT COLOR ---------------------- */
.color {
  overflow: hidden;
  position: relative;
  padding: var(--input-padding); }
  .color input {
    padding: 0;
    position: absolute;
    top: -100%;
    left: -100%;
    width: 300%;
    height: 300%; }

/* ---------------------- RADIOS + CHECKBOXES ---------------------- */
.dot, .cross, .checkbox input + span, .radio input + span {
  overflow: hidden;
  position: relative; }

.checkbox input + span, .radio input + span {
  width: 1em;
  height: 1em;
  position: relative;
  display: flex; }

.radio input + span {
  border-radius: 1em; }

 .checkbox input:indeterminate + span:before, .checkbox input:indeterminate + span:after, .radio input:indeterminate + span:before, .radio input:indeterminate + span:after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  top: 50%;
  margin-top: -0.5px;
  border-top-width: var(--stroke-width); }

.checkbox, .radio {
  display: flex;
  align-items: center;
  padding: var(--input-padding);
  padding-left: 0px;
  padding-top: 0px;
  padding-bottom: 0px; }
  .checkbox span, .radio span {
    border-width: 1px;
    margin: var(--input-padding);
    margin-left: 0em;
    margin-top: 0em;
    margin-bottom: 0em; }
  .checkbox input, .radio input {
    opacity: 0;
    padding: 0;
    margin: 0;
    position: absolute; }

/* backgrounds w. pop and sink */

.bg, .sassis {
  background-color: var(--bg); }

/* colors w. bright and fade */
* {
  border-color: var(--color); }

h1, h2, h4 {
  color: var(--color); }

input {
  color: var(--color); }

 input[type=text]:focus, input[type=email]:focus {
  box-shadow: 0px 0px 0px 1px var(--color) inset; }

 label:not(.disabled):active input[type=checkbox] + span:not([disabled]), label:not(.disabled):active input[type=radio] + span:not([disabled]), label:not(.disabled).active input[type=checkbox] + span:not([disabled]), label:not(.disabled).active input[type=radio] + span:not([disabled]) {
  box-shadow: 0px 0px 0px 1px var(--color) inset; }

 input[type=checkbox] + span:not([disabled]):active, input[type=checkbox] + span:not([disabled]).active, input[type=radio] + span:not([disabled]):active, input[type=radio] + span:not([disabled]).active {
  box-shadow: 0px 0px 0px 1px var(--color) inset; }

.checkbox input + span {
  border-color: var(--color); }
  .checkbox input + span:before, .checkbox input + span:after {
    border-color: var(--color); }

.radio input:checked + span {
  background-color: var(--color); }

.cross, .checkbox input:checked + span {
  background-image: linear-gradient(to top left, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%), linear-gradient(to top right, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%); }

.fill {
  fill: var(--color); }

.stroke {
  stroke: var(--color); }

button, .button {
  border-color: var(--color);
  color: var(--color); }

.filled, button.filled, .button.filled {
  background: var(--color);
  color: var(--bg); }
  .filled .fill, button.filled .fill, .button.filled .fill {
    fill: var(--bg); }
  .filled .stroke, button.filled .stroke, .button.filled .stroke {
    stroke: var(--bg); }
  .filled:after, .filled:before, button.filled:after, button.filled:before, .button.filled:after, .button.filled:before {
    border-color: var(--bg); }

a:active:not(.unclickable):not(.disabled), a.active:not(.unclickable):not(.disabled), button:active:not(.unclickable):not(.disabled), button.active:not(.unclickable):not(.disabled), .button:active:not(.unclickable):not(.disabled), .button.active:not(.unclickable):not(.disabled) {
  background: var(--color);
  color: var(--bg); }
  a:active:not(.unclickable):not(.disabled) .fill, a.active:not(.unclickable):not(.disabled) .fill, button:active:not(.unclickable):not(.disabled) .fill, button.active:not(.unclickable):not(.disabled) .fill, .button:active:not(.unclickable):not(.disabled) .fill, .button.active:not(.unclickable):not(.disabled) .fill {
    fill: var(--bg); }
  a:active:not(.unclickable):not(.disabled) .stroke, a.active:not(.unclickable):not(.disabled) .stroke, button:active:not(.unclickable):not(.disabled) .stroke, button.active:not(.unclickable):not(.disabled) .stroke, .button:active:not(.unclickable):not(.disabled) .stroke, .button.active:not(.unclickable):not(.disabled) .stroke {
    stroke: var(--bg); }
  a:active:not(.unclickable):not(.disabled):after, a:active:not(.unclickable):not(.disabled):before, a.active:not(.unclickable):not(.disabled):after, a.active:not(.unclickable):not(.disabled):before, button:active:not(.unclickable):not(.disabled):after, button:active:not(.unclickable):not(.disabled):before, button.active:not(.unclickable):not(.disabled):after, button.active:not(.unclickable):not(.disabled):before, .button:active:not(.unclickable):not(.disabled):after, .button:active:not(.unclickable):not(.disabled):before, .button.active:not(.unclickable):not(.disabled):after, .button.active:not(.unclickable):not(.disabled):before {
    border-color: var(--bg); }

a, button, .button {
  color: var(--color);
  border-color: var(--color); }

.normal, .color, .sassis {
  color: var(--color); }

.normal, .color, .sassis {
  border-color: var(--color); }

* .normal, * .color, * .sassis {
  border-color: var(--color); }

h1.normal, h1.color, h1.sassis, h2.normal, h2.color, h2.sassis, h4.normal, h4.color, h4.sassis {
  color: var(--color); }

input.normal, input.color, input.sassis {
  color: var(--color); }

 input[type=text]:focus.normal, input[type=text]:focus.color, input[type=text]:focus.sassis, input[type=email]:focus.normal, input[type=email]:focus.color, input[type=email]:focus.sassis {
  box-shadow: 0px 0px 0px 1px var(--color) inset; }

 label:not(.disabled):active input[type=checkbox] + span:not([disabled]).normal, label:not(.disabled):active input[type=checkbox] + span:not([disabled]).color, label:not(.disabled):active input[type=checkbox] + span:not([disabled]).sassis, label:not(.disabled):active input[type=radio] + span:not([disabled]).normal, label:not(.disabled):active input[type=radio] + span:not([disabled]).color, label:not(.disabled):active input[type=radio] + span:not([disabled]).sassis, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).normal, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).color, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).sassis, label:not(.disabled).active input[type=radio] + span:not([disabled]).normal, label:not(.disabled).active input[type=radio] + span:not([disabled]).color, label:not(.disabled).active input[type=radio] + span:not([disabled]).sassis {
  box-shadow: 0px 0px 0px 1px var(--color) inset; }

 input[type=checkbox] + span:not([disabled]):active.normal, input[type=checkbox] + span:not([disabled]):active.color, input[type=checkbox] + span:not([disabled]):active.sassis, input[type=checkbox] + span:not([disabled]).active.normal, input[type=checkbox] + span:not([disabled]).active.color, input[type=checkbox] + span:not([disabled]).active.sassis, input[type=radio] + span:not([disabled]):active.normal, input[type=radio] + span:not([disabled]):active.color, input[type=radio] + span:not([disabled]):active.sassis, input[type=radio] + span:not([disabled]).active.normal, input[type=radio] + span:not([disabled]).active.color, input[type=radio] + span:not([disabled]).active.sassis {
  box-shadow: 0px 0px 0px 1px var(--color) inset; }

.checkbox input + span.normal, .checkbox input + span.color, .checkbox input + span.sassis {
  border-color: var(--color); }

.checkbox input + span:before.normal, .checkbox input + span:before.color, .checkbox input + span:before.sassis, .checkbox input + span:after.normal, .checkbox input + span:after.color, .checkbox input + span:after.sassis {
  border-color: var(--color); }

.radio input:checked + span.normal, .radio input:checked + span.color, .radio input:checked + span.sassis {
  background-color: var(--color); }

.cross.normal, .cross.color, .cross.sassis, .checkbox input:checked + span.normal, .checkbox input:checked + span.color, .checkbox input:checked + span.sassis {
  background-image: linear-gradient(to top left, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%), linear-gradient(to top right, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%); }

.fill.normal, .fill.color, .fill.sassis {
  fill: var(--color); }

.stroke.normal, .stroke.color, .stroke.sassis {
  stroke: var(--color); }

button.normal, button.color, button.sassis, .button.normal, .button.color, .button.sassis {
  border-color: var(--color); }

button.normal, button.color, button.sassis, .button.normal, .button.color, .button.sassis {
  color: var(--color); }

.filled.normal, .filled.color, .filled.sassis, button.filled.normal, button.filled.color, button.filled.sassis, .button.filled.normal, .button.filled.color, .button.filled.sassis {
  background: var(--color); }

.filled.normal, .filled.color, .filled.sassis, button.filled.normal, button.filled.color, button.filled.sassis, .button.filled.normal, .button.filled.color, .button.filled.sassis {
  color: var(--bg); }

.filled .fill.normal, .filled .fill.color, .filled .fill.sassis, button.filled .fill.normal, button.filled .fill.color, button.filled .fill.sassis, .button.filled .fill.normal, .button.filled .fill.color, .button.filled .fill.sassis {
  fill: var(--bg); }

.filled .stroke.normal, .filled .stroke.color, .filled .stroke.sassis, button.filled .stroke.normal, button.filled .stroke.color, button.filled .stroke.sassis, .button.filled .stroke.normal, .button.filled .stroke.color, .button.filled .stroke.sassis {
  stroke: var(--bg); }

.filled:after.normal, .filled:after.color, .filled:after.sassis, .filled:before.normal, .filled:before.color, .filled:before.sassis, button.filled:after.normal, button.filled:after.color, button.filled:after.sassis, button.filled:before.normal, button.filled:before.color, button.filled:before.sassis, .button.filled:after.normal, .button.filled:after.color, .button.filled:after.sassis, .button.filled:before.normal, .button.filled:before.color, .button.filled:before.sassis {
  border-color: var(--bg); }

a:active:not(.unclickable):not(.disabled).normal, a:active:not(.unclickable):not(.disabled).color, a:active:not(.unclickable):not(.disabled).sassis, a.active:not(.unclickable):not(.disabled).normal, a.active:not(.unclickable):not(.disabled).color, a.active:not(.unclickable):not(.disabled).sassis, button:active:not(.unclickable):not(.disabled).normal, button:active:not(.unclickable):not(.disabled).color, button:active:not(.unclickable):not(.disabled).sassis, button.active:not(.unclickable):not(.disabled).normal, button.active:not(.unclickable):not(.disabled).color, button.active:not(.unclickable):not(.disabled).sassis, .button:active:not(.unclickable):not(.disabled).normal, .button:active:not(.unclickable):not(.disabled).color, .button:active:not(.unclickable):not(.disabled).sassis, .button.active:not(.unclickable):not(.disabled).normal, .button.active:not(.unclickable):not(.disabled).color, .button.active:not(.unclickable):not(.disabled).sassis {
  background: var(--color); }

a:active:not(.unclickable):not(.disabled).normal, a:active:not(.unclickable):not(.disabled).color, a:active:not(.unclickable):not(.disabled).sassis, a.active:not(.unclickable):not(.disabled).normal, a.active:not(.unclickable):not(.disabled).color, a.active:not(.unclickable):not(.disabled).sassis, button:active:not(.unclickable):not(.disabled).normal, button:active:not(.unclickable):not(.disabled).color, button:active:not(.unclickable):not(.disabled).sassis, button.active:not(.unclickable):not(.disabled).normal, button.active:not(.unclickable):not(.disabled).color, button.active:not(.unclickable):not(.disabled).sassis, .button:active:not(.unclickable):not(.disabled).normal, .button:active:not(.unclickable):not(.disabled).color, .button:active:not(.unclickable):not(.disabled).sassis, .button.active:not(.unclickable):not(.disabled).normal, .button.active:not(.unclickable):not(.disabled).color, .button.active:not(.unclickable):not(.disabled).sassis {
  color: var(--bg); }

a:active:not(.unclickable):not(.disabled) .fill.normal, a:active:not(.unclickable):not(.disabled) .fill.color, a:active:not(.unclickable):not(.disabled) .fill.sassis, a.active:not(.unclickable):not(.disabled) .fill.normal, a.active:not(.unclickable):not(.disabled) .fill.color, a.active:not(.unclickable):not(.disabled) .fill.sassis, button:active:not(.unclickable):not(.disabled) .fill.normal, button:active:not(.unclickable):not(.disabled) .fill.color, button:active:not(.unclickable):not(.disabled) .fill.sassis, button.active:not(.unclickable):not(.disabled) .fill.normal, button.active:not(.unclickable):not(.disabled) .fill.color, button.active:not(.unclickable):not(.disabled) .fill.sassis, .button:active:not(.unclickable):not(.disabled) .fill.normal, .button:active:not(.unclickable):not(.disabled) .fill.color, .button:active:not(.unclickable):not(.disabled) .fill.sassis, .button.active:not(.unclickable):not(.disabled) .fill.normal, .button.active:not(.unclickable):not(.disabled) .fill.color, .button.active:not(.unclickable):not(.disabled) .fill.sassis {
  fill: var(--bg); }

a:active:not(.unclickable):not(.disabled) .stroke.normal, a:active:not(.unclickable):not(.disabled) .stroke.color, a:active:not(.unclickable):not(.disabled) .stroke.sassis, a.active:not(.unclickable):not(.disabled) .stroke.normal, a.active:not(.unclickable):not(.disabled) .stroke.color, a.active:not(.unclickable):not(.disabled) .stroke.sassis, button:active:not(.unclickable):not(.disabled) .stroke.normal, button:active:not(.unclickable):not(.disabled) .stroke.color, button:active:not(.unclickable):not(.disabled) .stroke.sassis, button.active:not(.unclickable):not(.disabled) .stroke.normal, button.active:not(.unclickable):not(.disabled) .stroke.color, button.active:not(.unclickable):not(.disabled) .stroke.sassis, .button:active:not(.unclickable):not(.disabled) .stroke.normal, .button:active:not(.unclickable):not(.disabled) .stroke.color, .button:active:not(.unclickable):not(.disabled) .stroke.sassis, .button.active:not(.unclickable):not(.disabled) .stroke.normal, .button.active:not(.unclickable):not(.disabled) .stroke.color, .button.active:not(.unclickable):not(.disabled) .stroke.sassis {
  stroke: var(--bg); }

a:active:not(.unclickable):not(.disabled):after.normal, a:active:not(.unclickable):not(.disabled):after.color, a:active:not(.unclickable):not(.disabled):after.sassis, a:active:not(.unclickable):not(.disabled):before.normal, a:active:not(.unclickable):not(.disabled):before.color, a:active:not(.unclickable):not(.disabled):before.sassis, a.active:not(.unclickable):not(.disabled):after.normal, a.active:not(.unclickable):not(.disabled):after.color, a.active:not(.unclickable):not(.disabled):after.sassis, a.active:not(.unclickable):not(.disabled):before.normal, a.active:not(.unclickable):not(.disabled):before.color, a.active:not(.unclickable):not(.disabled):before.sassis, button:active:not(.unclickable):not(.disabled):after.normal, button:active:not(.unclickable):not(.disabled):after.color, button:active:not(.unclickable):not(.disabled):after.sassis, button:active:not(.unclickable):not(.disabled):before.normal, button:active:not(.unclickable):not(.disabled):before.color, button:active:not(.unclickable):not(.disabled):before.sassis, button.active:not(.unclickable):not(.disabled):after.normal, button.active:not(.unclickable):not(.disabled):after.color, button.active:not(.unclickable):not(.disabled):after.sassis, button.active:not(.unclickable):not(.disabled):before.normal, button.active:not(.unclickable):not(.disabled):before.color, button.active:not(.unclickable):not(.disabled):before.sassis, .button:active:not(.unclickable):not(.disabled):after.normal, .button:active:not(.unclickable):not(.disabled):after.color, .button:active:not(.unclickable):not(.disabled):after.sassis, .button:active:not(.unclickable):not(.disabled):before.normal, .button:active:not(.unclickable):not(.disabled):before.color, .button:active:not(.unclickable):not(.disabled):before.sassis, .button.active:not(.unclickable):not(.disabled):after.normal, .button.active:not(.unclickable):not(.disabled):after.color, .button.active:not(.unclickable):not(.disabled):after.sassis, .button.active:not(.unclickable):not(.disabled):before.normal, .button.active:not(.unclickable):not(.disabled):before.color, .button.active:not(.unclickable):not(.disabled):before.sassis {
  border-color: var(--bg); }

a.normal, a.color, a.sassis, button.normal, button.color, button.sassis, .button.normal, .button.color, .button.sassis {
  color: var(--color); }

a.normal, a.color, a.sassis, button.normal, button.color, button.sassis, .button.normal, .button.color, .button.sassis {
  border-color: var(--color); }

.fade {
  color: var(--color-fade); }

.fade {
  border-color: var(--color-fade); }

* .fade {
  border-color: var(--color-fade); }

h1.fade, h2.fade, h4.fade {
  color: var(--color-fade); }

input.fade {
  color: var(--color-fade); }

 input[type=text]:focus.fade, input[type=email]:focus.fade {
  box-shadow: 0px 0px 0px 1px var(--color-fade) inset; }

 label:not(.disabled):active input[type=checkbox] + span:not([disabled]).fade, label:not(.disabled):active input[type=radio] + span:not([disabled]).fade, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).fade, label:not(.disabled).active input[type=radio] + span:not([disabled]).fade {
  box-shadow: 0px 0px 0px 1px var(--color-fade) inset; }

 input[type=checkbox] + span:not([disabled]):active.fade, input[type=checkbox] + span:not([disabled]).active.fade, input[type=radio] + span:not([disabled]):active.fade, input[type=radio] + span:not([disabled]).active.fade {
  box-shadow: 0px 0px 0px 1px var(--color-fade) inset; }

.checkbox input + span.fade {
  border-color: var(--color-fade); }

.checkbox input + span:before.fade, .checkbox input + span:after.fade {
  border-color: var(--color-fade); }

.radio input:checked + span.fade {
  background-color: var(--color-fade); }

.cross.fade, .checkbox input:checked + span.fade {
  background-image: linear-gradient(to top left, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-fade) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%), linear-gradient(to top right, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-fade) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%); }

.fill.fade {
  fill: var(--color-fade); }

.stroke.fade {
  stroke: var(--color-fade); }

button.fade, .button.fade {
  border-color: var(--color-fade); }

button.fade, .button.fade {
  color: var(--color-fade); }

.filled.fade, button.filled.fade, .button.filled.fade {
  background: var(--color-fade); }

.filled.fade, button.filled.fade, .button.filled.fade {
  color: var(--bg); }

.filled .fill.fade, button.filled .fill.fade, .button.filled .fill.fade {
  fill: var(--bg); }

.filled .stroke.fade, button.filled .stroke.fade, .button.filled .stroke.fade {
  stroke: var(--bg); }

.filled:after.fade, .filled:before.fade, button.filled:after.fade, button.filled:before.fade, .button.filled:after.fade, .button.filled:before.fade {
  border-color: var(--bg); }

a:active:not(.unclickable):not(.disabled).fade, a.active:not(.unclickable):not(.disabled).fade, button:active:not(.unclickable):not(.disabled).fade, button.active:not(.unclickable):not(.disabled).fade, .button:active:not(.unclickable):not(.disabled).fade, .button.active:not(.unclickable):not(.disabled).fade {
  background: var(--color-fade); }

a:active:not(.unclickable):not(.disabled).fade, a.active:not(.unclickable):not(.disabled).fade, button:active:not(.unclickable):not(.disabled).fade, button.active:not(.unclickable):not(.disabled).fade, .button:active:not(.unclickable):not(.disabled).fade, .button.active:not(.unclickable):not(.disabled).fade {
  color: var(--bg); }

a:active:not(.unclickable):not(.disabled) .fill.fade, a.active:not(.unclickable):not(.disabled) .fill.fade, button:active:not(.unclickable):not(.disabled) .fill.fade, button.active:not(.unclickable):not(.disabled) .fill.fade, .button:active:not(.unclickable):not(.disabled) .fill.fade, .button.active:not(.unclickable):not(.disabled) .fill.fade {
  fill: var(--bg); }

a:active:not(.unclickable):not(.disabled) .stroke.fade, a.active:not(.unclickable):not(.disabled) .stroke.fade, button:active:not(.unclickable):not(.disabled) .stroke.fade, button.active:not(.unclickable):not(.disabled) .stroke.fade, .button:active:not(.unclickable):not(.disabled) .stroke.fade, .button.active:not(.unclickable):not(.disabled) .stroke.fade {
  stroke: var(--bg); }

a:active:not(.unclickable):not(.disabled):after.fade, a:active:not(.unclickable):not(.disabled):before.fade, a.active:not(.unclickable):not(.disabled):after.fade, a.active:not(.unclickable):not(.disabled):before.fade, button:active:not(.unclickable):not(.disabled):after.fade, button:active:not(.unclickable):not(.disabled):before.fade, button.active:not(.unclickable):not(.disabled):after.fade, button.active:not(.unclickable):not(.disabled):before.fade, .button:active:not(.unclickable):not(.disabled):after.fade, .button:active:not(.unclickable):not(.disabled):before.fade, .button.active:not(.unclickable):not(.disabled):after.fade, .button.active:not(.unclickable):not(.disabled):before.fade {
  border-color: var(--bg); }

a.fade, button.fade, .button.fade {
  color: var(--color-fade); }

a.fade, button.fade, .button.fade {
  border-color: var(--color-fade); }

/* placeholder fade colors */
*::placeholder {
  color: var(--color-fade); }

/* colors w. success, info, error, alert */
 .new, .created {
  color: var(--color-success); }

 .new, .created {
  border-color: var(--color-success); }

 * .new, * .created {
  border-color: var(--color-success); }

 h1.new, h1.created, h2.new, h2.created, h4.new, h4.created {
  color: var(--color-success); }

 input.new, input.created {
  color: var(--color-success); }

 input[type=text]:focus.new, input[type=text]:focus.created, input[type=email]:focus.new, input[type=email]:focus.created {
  box-shadow: 0px 0px 0px 1px var(--color-success) inset; }

 label:not(.disabled):active input[type=checkbox] + span:not([disabled]).new, label:not(.disabled):active input[type=checkbox] + span:not([disabled]).created, label:not(.disabled):active input[type=radio] + span:not([disabled]).new, label:not(.disabled):active input[type=radio] + span:not([disabled]).created, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).new, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).created, label:not(.disabled).active input[type=radio] + span:not([disabled]).new, label:not(.disabled).active input[type=radio] + span:not([disabled]).created {
  box-shadow: 0px 0px 0px 1px var(--color-success) inset; }

 input[type=checkbox] + span:not([disabled]):active.new, input[type=checkbox] + span:not([disabled]):active.created, input[type=checkbox] + span:not([disabled]).active.new, input[type=checkbox] + span:not([disabled]).active.created, input[type=radio] + span:not([disabled]):active.new, input[type=radio] + span:not([disabled]):active.created, input[type=radio] + span:not([disabled]).active.new, input[type=radio] + span:not([disabled]).active.created {
  box-shadow: 0px 0px 0px 1px var(--color-success) inset; }

 .checkbox input + span.new, .checkbox input + span.created {
  border-color: var(--color-success); }

 .checkbox input + span:before.new, .checkbox input + span:before.created, .checkbox input + span:after.new, .checkbox input + span:after.created {
  border-color: var(--color-success); }

 .radio input:checked + span.new, .radio input:checked + span.created {
  background-color: var(--color-success); }

 .cross.new, .cross.created, .checkbox input:checked + span.new, .checkbox input:checked + span.created {
  background-image: linear-gradient(to top left, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-success) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%), linear-gradient(to top right, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-success) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%); }

 .fill.new, .fill.created {
  fill: var(--color-success); }

 .stroke.new, .stroke.created {
  stroke: var(--color-success); }

 button.new, button.created, .button.new, .button.created {
  border-color: var(--color-success); }

 button.new, button.created, .button.new, .button.created {
  color: var(--color-success); }

 .filled.new, .filled.created, button.filled.new, button.filled.created, .button.filled.new, .button.filled.created {
  background: var(--color-success); }

 .filled.new, .filled.created, button.filled.new, button.filled.created, .button.filled.new, .button.filled.created {
  color: var(--bg); }

 .filled .fill.new, .filled .fill.created, button.filled .fill.new, button.filled .fill.created, .button.filled .fill.new, .button.filled .fill.created {
  fill: var(--bg); }

 .filled .stroke.new, .filled .stroke.created, button.filled .stroke.new, button.filled .stroke.created, .button.filled .stroke.new, .button.filled .stroke.created {
  stroke: var(--bg); }

 .filled:after.new, .filled:after.created, .filled:before.new, .filled:before.created, button.filled:after.new, button.filled:after.created, button.filled:before.new, button.filled:before.created, .button.filled:after.new, .button.filled:after.created, .button.filled:before.new, .button.filled:before.created {
  border-color: var(--bg); }

 a:active:not(.unclickable):not(.disabled).new, a:active:not(.unclickable):not(.disabled).created, a.active:not(.unclickable):not(.disabled).new, a.active:not(.unclickable):not(.disabled).created, button:active:not(.unclickable):not(.disabled).new, button:active:not(.unclickable):not(.disabled).created, button.active:not(.unclickable):not(.disabled).new, button.active:not(.unclickable):not(.disabled).created, .button:active:not(.unclickable):not(.disabled).new, .button:active:not(.unclickable):not(.disabled).created, .button.active:not(.unclickable):not(.disabled).new, .button.active:not(.unclickable):not(.disabled).created {
  background: var(--color-success); }

 a:active:not(.unclickable):not(.disabled).new, a:active:not(.unclickable):not(.disabled).created, a.active:not(.unclickable):not(.disabled).new, a.active:not(.unclickable):not(.disabled).created, button:active:not(.unclickable):not(.disabled).new, button:active:not(.unclickable):not(.disabled).created, button.active:not(.unclickable):not(.disabled).new, button.active:not(.unclickable):not(.disabled).created, .button:active:not(.unclickable):not(.disabled).new, .button:active:not(.unclickable):not(.disabled).created, .button.active:not(.unclickable):not(.disabled).new, .button.active:not(.unclickable):not(.disabled).created {
  color: var(--bg); }

 a:active:not(.unclickable):not(.disabled) .fill.new, a:active:not(.unclickable):not(.disabled) .fill.created, a.active:not(.unclickable):not(.disabled) .fill.new, a.active:not(.unclickable):not(.disabled) .fill.created, button:active:not(.unclickable):not(.disabled) .fill.new, button:active:not(.unclickable):not(.disabled) .fill.created, button.active:not(.unclickable):not(.disabled) .fill.new, button.active:not(.unclickable):not(.disabled) .fill.created, .button:active:not(.unclickable):not(.disabled) .fill.new, .button:active:not(.unclickable):not(.disabled) .fill.created, .button.active:not(.unclickable):not(.disabled) .fill.new, .button.active:not(.unclickable):not(.disabled) .fill.created {
  fill: var(--bg); }

 a:active:not(.unclickable):not(.disabled) .stroke.new, a:active:not(.unclickable):not(.disabled) .stroke.created, a.active:not(.unclickable):not(.disabled) .stroke.new, a.active:not(.unclickable):not(.disabled) .stroke.created, button:active:not(.unclickable):not(.disabled) .stroke.new, button:active:not(.unclickable):not(.disabled) .stroke.created, button.active:not(.unclickable):not(.disabled) .stroke.new, button.active:not(.unclickable):not(.disabled) .stroke.created, .button:active:not(.unclickable):not(.disabled) .stroke.new, .button:active:not(.unclickable):not(.disabled) .stroke.created, .button.active:not(.unclickable):not(.disabled) .stroke.new, .button.active:not(.unclickable):not(.disabled) .stroke.created {
  stroke: var(--bg); }

 a:active:not(.unclickable):not(.disabled):after.new, a:active:not(.unclickable):not(.disabled):after.created, a:active:not(.unclickable):not(.disabled):before.new, a:active:not(.unclickable):not(.disabled):before.created, a.active:not(.unclickable):not(.disabled):after.new, a.active:not(.unclickable):not(.disabled):after.created, a.active:not(.unclickable):not(.disabled):before.new, a.active:not(.unclickable):not(.disabled):before.created, button:active:not(.unclickable):not(.disabled):after.new, button:active:not(.unclickable):not(.disabled):after.created, button:active:not(.unclickable):not(.disabled):before.new, button:active:not(.unclickable):not(.disabled):before.created, button.active:not(.unclickable):not(.disabled):after.new, button.active:not(.unclickable):not(.disabled):after.created, button.active:not(.unclickable):not(.disabled):before.new, button.active:not(.unclickable):not(.disabled):before.created, .button:active:not(.unclickable):not(.disabled):after.new, .button:active:not(.unclickable):not(.disabled):after.created, .button:active:not(.unclickable):not(.disabled):before.new, .button:active:not(.unclickable):not(.disabled):before.created, .button.active:not(.unclickable):not(.disabled):after.new, .button.active:not(.unclickable):not(.disabled):after.created, .button.active:not(.unclickable):not(.disabled):before.new, .button.active:not(.unclickable):not(.disabled):before.created {
  border-color: var(--bg); }

 a.new, a.created, button.new, button.created, .button.new, .button.created {
  color: var(--color-success); }

 a.new, a.created, button.new, button.created, .button.new, .button.created {
  border-color: var(--color-success); }

.info {
  color: var(--color-info); }

.info {
  border-color: var(--color-info); }

* .info {
  border-color: var(--color-info); }

h1.info, h2.info, h4.info {
  color: var(--color-info); }

input.info {
  color: var(--color-info); }

 input[type=text]:focus.info, input[type=email]:focus.info {
  box-shadow: 0px 0px 0px 1px var(--color-info) inset; }

 label:not(.disabled):active input[type=checkbox] + span:not([disabled]).info, label:not(.disabled):active input[type=radio] + span:not([disabled]).info, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).info, label:not(.disabled).active input[type=radio] + span:not([disabled]).info {
  box-shadow: 0px 0px 0px 1px var(--color-info) inset; }

 input[type=checkbox] + span:not([disabled]):active.info, input[type=checkbox] + span:not([disabled]).active.info, input[type=radio] + span:not([disabled]):active.info, input[type=radio] + span:not([disabled]).active.info {
  box-shadow: 0px 0px 0px 1px var(--color-info) inset; }

.checkbox input + span.info {
  border-color: var(--color-info); }

.checkbox input + span:before.info, .checkbox input + span:after.info {
  border-color: var(--color-info); }

.radio input:checked + span.info {
  background-color: var(--color-info); }

.cross.info, .checkbox input:checked + span.info {
  background-image: linear-gradient(to top left, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-info) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%), linear-gradient(to top right, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-info) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%); }

.fill.info {
  fill: var(--color-info); }

.stroke.info {
  stroke: var(--color-info); }

button.info, .button.info {
  border-color: var(--color-info); }

button.info, .button.info {
  color: var(--color-info); }

.filled.info, button.filled.info, .button.filled.info {
  background: var(--color-info); }

.filled.info, button.filled.info, .button.filled.info {
  color: var(--bg); }

.filled .fill.info, button.filled .fill.info, .button.filled .fill.info {
  fill: var(--bg); }

.filled .stroke.info, button.filled .stroke.info, .button.filled .stroke.info {
  stroke: var(--bg); }

.filled:after.info, .filled:before.info, button.filled:after.info, button.filled:before.info, .button.filled:after.info, .button.filled:before.info {
  border-color: var(--bg); }

a:active:not(.unclickable):not(.disabled).info, a.active:not(.unclickable):not(.disabled).info, button:active:not(.unclickable):not(.disabled).info, button.active:not(.unclickable):not(.disabled).info, .button:active:not(.unclickable):not(.disabled).info, .button.active:not(.unclickable):not(.disabled).info {
  background: var(--color-info); }

a:active:not(.unclickable):not(.disabled).info, a.active:not(.unclickable):not(.disabled).info, button:active:not(.unclickable):not(.disabled).info, button.active:not(.unclickable):not(.disabled).info, .button:active:not(.unclickable):not(.disabled).info, .button.active:not(.unclickable):not(.disabled).info {
  color: var(--bg); }

a:active:not(.unclickable):not(.disabled) .fill.info, a.active:not(.unclickable):not(.disabled) .fill.info, button:active:not(.unclickable):not(.disabled) .fill.info, button.active:not(.unclickable):not(.disabled) .fill.info, .button:active:not(.unclickable):not(.disabled) .fill.info, .button.active:not(.unclickable):not(.disabled) .fill.info {
  fill: var(--bg); }

a:active:not(.unclickable):not(.disabled) .stroke.info, a.active:not(.unclickable):not(.disabled) .stroke.info, button:active:not(.unclickable):not(.disabled) .stroke.info, button.active:not(.unclickable):not(.disabled) .stroke.info, .button:active:not(.unclickable):not(.disabled) .stroke.info, .button.active:not(.unclickable):not(.disabled) .stroke.info {
  stroke: var(--bg); }

a:active:not(.unclickable):not(.disabled):after.info, a:active:not(.unclickable):not(.disabled):before.info, a.active:not(.unclickable):not(.disabled):after.info, a.active:not(.unclickable):not(.disabled):before.info, button:active:not(.unclickable):not(.disabled):after.info, button:active:not(.unclickable):not(.disabled):before.info, button.active:not(.unclickable):not(.disabled):after.info, button.active:not(.unclickable):not(.disabled):before.info, .button:active:not(.unclickable):not(.disabled):after.info, .button:active:not(.unclickable):not(.disabled):before.info, .button.active:not(.unclickable):not(.disabled):after.info, .button.active:not(.unclickable):not(.disabled):before.info {
  border-color: var(--bg); }

a.info, button.info, .button.info {
  color: var(--color-info); }

a.info, button.info, .button.info {
  border-color: var(--color-info); }

.error {
  color: var(--color-error); }

.error {
  border-color: var(--color-error); }

* .error {
  border-color: var(--color-error); }

h1.error, h2.error, h4.error {
  color: var(--color-error); }

input.error {
  color: var(--color-error); }

 input[type=text]:focus.error, input[type=email]:focus.error {
  box-shadow: 0px 0px 0px 1px var(--color-error) inset; }

 label:not(.disabled):active input[type=checkbox] + span:not([disabled]).error, label:not(.disabled):active input[type=radio] + span:not([disabled]).error, label:not(.disabled).active input[type=checkbox] + span:not([disabled]).error, label:not(.disabled).active input[type=radio] + span:not([disabled]).error {
  box-shadow: 0px 0px 0px 1px var(--color-error) inset; }

 input[type=checkbox] + span:not([disabled]):active.error, input[type=checkbox] + span:not([disabled]).active.error, input[type=radio] + span:not([disabled]):active.error, input[type=radio] + span:not([disabled]).active.error {
  box-shadow: 0px 0px 0px 1px var(--color-error) inset; }

.checkbox input + span.error {
  border-color: var(--color-error); }

.checkbox input + span:before.error, .checkbox input + span:after.error {
  border-color: var(--color-error); }

.radio input:checked + span.error {
  background-color: var(--color-error); }

.cross.error, .checkbox input:checked + span.error {
  background-image: linear-gradient(to top left, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-error) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%), linear-gradient(to top right, transparent 0%, transparent calc(50% - var(--stroke-width)), var(--color-error) 50%, transparent calc(50% + var(--stroke-width)), transparent 100%); }

.fill.error {
  fill: var(--color-error); }

.stroke.error {
  stroke: var(--color-error); }

button.error, .button.error {
  border-color: var(--color-error); }

button.error, .button.error {
  color: var(--color-error); }

.filled.error, button.filled.error, .button.filled.error {
  background: var(--color-error); }

.filled.error, button.filled.error, .button.filled.error {
  color: var(--bg); }

.filled .fill.error, button.filled .fill.error, .button.filled .fill.error {
  fill: var(--bg); }

.filled .stroke.error, button.filled .stroke.error, .button.filled .stroke.error {
  stroke: var(--bg); }

.filled:after.error, .filled:before.error, button.filled:after.error, button.filled:before.error, .button.filled:after.error, .button.filled:before.error {
  border-color: var(--bg); }

a:active:not(.unclickable):not(.disabled).error, a.active:not(.unclickable):not(.disabled).error, button:active:not(.unclickable):not(.disabled).error, button.active:not(.unclickable):not(.disabled).error, .button:active:not(.unclickable):not(.disabled).error, .button.active:not(.unclickable):not(.disabled).error {
  background: var(--color-error); }

a:active:not(.unclickable):not(.disabled).error, a.active:not(.unclickable):not(.disabled).error, button:active:not(.unclickable):not(.disabled).error, button.active:not(.unclickable):not(.disabled).error, .button:active:not(.unclickable):not(.disabled).error, .button.active:not(.unclickable):not(.disabled).error {
  color: var(--bg); }

a:active:not(.unclickable):not(.disabled) .fill.error, a.active:not(.unclickable):not(.disabled) .fill.error, button:active:not(.unclickable):not(.disabled) .fill.error, button.active:not(.unclickable):not(.disabled) .fill.error, .button:active:not(.unclickable):not(.disabled) .fill.error, .button.active:not(.unclickable):not(.disabled) .fill.error {
  fill: var(--bg); }

a:active:not(.unclickable):not(.disabled) .stroke.error, a.active:not(.unclickable):not(.disabled) .stroke.error, button:active:not(.unclickable):not(.disabled) .stroke.error, button.active:not(.unclickable):not(.disabled) .stroke.error, .button:active:not(.unclickable):not(.disabled) .stroke.error, .button.active:not(.unclickable):not(.disabled) .stroke.error {
  stroke: var(--bg); }

a:active:not(.unclickable):not(.disabled):after.error, a:active:not(.unclickable):not(.disabled):before.error, a.active:not(.unclickable):not(.disabled):after.error, a.active:not(.unclickable):not(.disabled):before.error, button:active:not(.unclickable):not(.disabled):after.error, button:active:not(.unclickable):not(.disabled):before.error, button.active:not(.unclickable):not(.disabled):after.error, button.active:not(.unclickable):not(.disabled):before.error, .button:active:not(.unclickable):not(.disabled):after.error, .button:active:not(.unclickable):not(.disabled):before.error, .button.active:not(.unclickable):not(.disabled):after.error, .button.active:not(.unclickable):not(.disabled):before.error {
  border-color: var(--bg); }

a.error, button.error, .button.error {
  color: var(--color-error); }

a.error, button.error, .button.error {
  border-color: var(--color-error); }

/* background and colors w. a, b, c, d, e */

@media screen and (max-width: 767px) {
   :root .safari-only {
    padding-bottom: 70px !important; } }

 .abs {
  position: absolute; }

 .rel {
  position: relative; }

.fixed {
  position: fixed; }

.sticky {
  position: sticky; }

.inline-block {
  display: inline-block; }

.block {
  display: block; }

.flex {
  display: flex; }

.none {
  display: none; }

.column {
  flex-direction: column; }

.row {
  flex-direction: row; }

.grow {
  flex-grow: 1; }

.no-basis {
  flex-basis: 0; }

.wrap {
  flex-wrap: wrap; }

.normal {
  font-weight: normal; }

.text-center {
  text-align: center; }

.uppercase {
  text-transform: uppercase; }

.lowercase {
  text-transform: lowercase; }

.pointer {
  cursor: pointer; }

 .hidden {
  opacity: 0; }

.overflow-hidden {
  overflow: hidden; }

.overflow-auto {
  overflow: auto; }

.margin-auto {
  margin: auto auto; }

.fill {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0; }

.user-select-none {
  user-select: none; }

.row-space-between-center {
  justify-content: space-between;
  align-items: center;
  flex-direction: row; }

.row-space-between-start {
  justify-content: space-between;
  align-items: start;
  flex-direction: row; }

.row-center-center {
  justify-content: center;
  align-items: center;
  flex-direction: row; }

.row-flex-end-center {
  justify-content: flex-end;
  align-items: center;
  flex-direction: row; }

.row-start-center {
  justify-content: start;
  align-items: center;
  flex-direction: row; }

.row-start-start {
  justify-content: start;
  align-items: start;
  flex-direction: row; }

.row-flex-start-center {
  justify-content: flex-start;
  align-items: center;
  flex-direction: row; }

.row-stretch-center {
  justify-content: stretch;
  align-items: center;
  flex-direction: row; }

.row-stretch-stretch {
  justify-content: stretch;
  align-items: stretch;
  flex-direction: row; }

.column-center-center {
  align-items: center;
  justify-content: center;
  flex-direction: column; }

.column-center-start {
  align-items: center;
  justify-content: start;
  flex-direction: column; }

.column-start-start {
  align-items: start;
  justify-content: start;
  flex-direction: column; }

.column-stretch-space-between {
  align-items: stretch;
  justify-content: space-between;
  flex-direction: column; }

.column-stretch-start {
  align-items: stretch;
  justify-content: start;
  flex-direction: column; }

.column-stretch-flex-start {
  align-items: stretch;
  justify-content: flex-start;
  flex-direction: column; }

.column-stretch-stretch {
  align-items: stretch;
  justify-content: stretch;
  flex-direction: column; }

.align-self-center {
  align-self: center; }

.align-self-flex-end {
  align-self: flex-end; }

.mt0 {
  margin-top: 0em; }

.mb0 {
  margin-bottom: 0em; }

.t0 {
  top: 0em; }

.r0 {
  right: 0em; }

.l0 {
  left: 0em; }

.w0em {
  width: 0em; }

.h0px {
  height: 0px; }

.h-auto {
  height: auto; }

.basis0pc {
  flex-basis: 0%; }

.w1em {
  width: 1em; }

.h1em {
  height: 1em; }

.ptb0-2 {
  padding-top: 0.2em;
  padding-bottom: 0.2em; }

.p0-2 {
  padding: 0.2em; }

.h2em {
  height: 2em; }

.p0-3 {
  padding: 0.3em; }

.b0-3 {
  bottom: 0.3em; }

.plr0-4 {
  padding-left: 0.4em;
  padding-right: 0.4em; }

.w4em {
  width: 4em; }

.ptb0-5 {
  padding-top: 0.5em;
  padding-bottom: 0.5em; }

.p0-5 {
  padding: 0.5em; }

.mr0-5 {
  margin-right: 0.5em; }

.mtb0-5 {
  margin-top: 0.5em;
  margin-bottom: 0.5em; }

.ml0-6 {
  margin-left: 0.6em; }

.pt1 {
  padding-top: 1em; }

.pb1 {
  padding-bottom: 1em; }

.plr1 {
  padding-left: 1em;
  padding-right: 1em; }

.ptb1 {
  padding-top: 1em;
  padding-bottom: 1em; }

.p1 {
  padding: 1em; }

.mt1 {
  margin-top: 1em; }

.mr1 {
  margin-right: 1em; }

.cml1 > * {
  margin-left: 1em; }

.mb1 {
  margin-bottom: 1em; }

.cmb1 > * {
  margin-bottom: 1em; }

.mlr1 {
  margin-left: 1em;
  margin-right: 1em; }

.mtb1 {
  margin-top: 1em;
  margin-bottom: 1em; }

.m1 {
  margin: 1em; }

.bt1-solid {
  border-top-width: 1px;
  border-top-style: solid; }

.b1-solid {
  border: 1px solid; }

.t1 {
  top: 1em; }

.r1 {
  right: 1em; }

.t1-3 {
  top: 1.3em; }

.minw18em {
  min-width: 18em; }

.plr2 {
  padding-left: 2em;
  padding-right: 2em; }

.ptb4 {
  padding-top: 4em;
  padding-bottom: 4em; }

.p5 {
  padding: 5em; }

.pt5-4 {
  padding-top: 5.4em; }

.w100pc {
  width: 100%; }

.w100vw {
  width: 100vw; }

.h100pc {
  height: 100%; }

.h100vh {
  height: 100vh; }

.maxw100vw {
  max-width: 100vw; }

.f1 {
  font-size: var(--f1);
  line-height: var(--line-height); }
  .f1 input, .f1 button {
    font-size: var(--f1);
    line-height: var(--line-height); }

.f2, h4, .h4 {
  font-size: var(--f2);
  line-height: var(--line-height); }
  .f2 input, .f2 button, h4 input, h4 button, .h4 input, .h4 button {
    font-size: var(--f2);
    line-height: var(--line-height); }

.f3 {
  font-size: var(--f3);
  line-height: var(--line-height); }
  .f3 input, .f3 button {
    font-size: var(--f3);
    line-height: var(--line-height); }

 h2, .h2 {
  font-size: var(--f4);
  line-height: var(--line-height); }
   h2 input, h2 button, .h2 input, .h2 button {
    font-size: var(--f4);
    line-height: var(--line-height); }

 h1, .h1 {
  font-size: var(--f5);
  line-height: var(--line-height); }
   h1 input, h1 button, .h1 input, .h1 button {
    font-size: var(--f5);
    line-height: var(--line-height); }

.z-index22 {
  z-index: 22; }

.z-index66 {
  z-index: 66; }

.z-index78 {
  z-index: 78; }

.z-index80 {
  z-index: 80; }

.z-index81 {
  z-index: 81; }

.z-index99 {
  z-index: 99; }

.serif {
  font-family: var(--font-serif); }
  .serif input, .serif button {
    font-family: var(--font-serif); }

@media only screen and (min-width: 576px) {
  .sm-min-none {
    display: none !important; } }

@media only screen and (max-width: 576px) {
  .sm-max-100 {
    width: 100%;
    min-width: 100%; }
  .sm-max-grow {
    flex-grow: 1; }
  .sm-max-column {
    flex-direction: column !important; }
  .sm-max-none {
    display: none !important; } }

@media only screen and (min-width: 768px) {
  .md-container {
    max-width: var(--container); } }
@font-face {
  font-family: 'b-a-s-i-s-g-r-o-s';
  font-weight: bold;
  font-style: italic, oblique, normal;
  src: url("/fonts/b-a-s-i-s-g-r-o-s_3.ttf"); }

@font-face {
  font-family: 'b-a-s-i-s-g-r-o-s';
  font-weight: normal;
  font-style: italic, oblique, normal;
  src: url("/fonts/b-a-s-i-s-g-r-o-s_3.ttf"); }

@font-face {
  font-family: 'b-a-s-i-s-g-r-o-s';
  font-weight: thin;
  font-style: italic, oblique, normal;
  src: url("/fonts/b-a-s-i-s-g-r-o-s_2.ttf"); }

@keyframes scroll {
  from {
    background-position: 0px 0px; }
  to {
    background-position: 0px 100px; } }

html, body {
  letter-spacing: 0.05em;
  overflow: hidden; }
  html *, body * {
    -webkit-tap-highlight-color: transparent; }
  html .post-media-link, body .post-media-link {
    cursor: initial; }
    html .post-media-link.link, body .post-media-link.link {
      cursor: pointer; }
    html .post-media-link:active, body .post-media-link:active {
      background: transparent !important; }
  @media only screen and (max-width: 576px) {
    html #nowt, body #nowt {
      border-bottom: 1px solid var(--color);
      margin-bottom: 1em; }
    html #footer, html #footer *, body #footer, body #footer * {
      flex-direction: column-reverse !important; }
    html #feed-nav label, body #feed-nav label {
      min-width: 5.5em; }
    html #works-nav label, body #works-nav label {
      min-width: 50%; }
    html .post-media, html .homepage-media, html .about-media, html .feed-item-media, body .post-media, body .homepage-media, body .about-media, body .feed-item-media {
      margin-left: -1em;
      margin-right: -1em; } }
  @media only screen and (min-width: 576px) {
    html #nowt, body #nowt {
      margin-bottom: -1em; } }
  @media only screen and (min-width: 768px) {
    html #feed .post-orientation-portrait .post-text, html #feed .post-orientation-portrait .media, body #feed .post-orientation-portrait .post-text, body #feed .post-orientation-portrait .media {
      margin: 0em 12em; }
    html #subscribe-page, body #subscribe-page {
      margin: 0em 19em; } }
  html h1, html h2, html h3, html h4, html h5, html h6, body h1, body h2, body h3, body h4, body h5, body h6 {
    font-family: 'b-a-s-i-s-g-r-o-s';
    font-weight: thin; }
  html .dot, body .dot {
    border: 1px solid var(--color);
    margin-right: 0.5em;
    margin-bottom: 0.05em;
    width: 0.5em;
    height: 0.5em;
    border-radius: 0.5em;
    display: inline-block; }
  html .bb, body .bb {
    border-bottom-width: var(--borders);
    border-bottom-style: solid; }
  html .bt, body .bt {
    border-top-width: var(--borders);
    border-top-style: solid; }
  html .br, body .br {
    border-right-width: var(--borders);
    border-right-style: solid; }
  html .bl, body .bl {
    border-left-width: var(--borders);
    border-left-style: solid; }
  html #autr svg path, body #autr svg path {
    stroke-width: 1px;
    fill: transparent;
    fill: var(--color);
    display: none; }
    html #autr svg path:nth-child(3), body #autr svg path:nth-child(3) {
      display: block; }
  html .ico-1 #autr svg path, body .ico-1 #autr svg path {
    display: none; }
  html .ico-1 #autr svg path:nth-child(1), body .ico-1 #autr svg path:nth-child(1) {
    display: block; }
  html .ico-2 #autr svg path, body .ico-2 #autr svg path {
    display: none; }
  html .ico-2 #autr svg path:nth-child(2), body .ico-2 #autr svg path:nth-child(2) {
    display: block; }
  html .ico-3 #autr svg path, body .ico-3 #autr svg path {
    display: none; }
  html .ico-3 #autr svg path:nth-child(3), body .ico-3 #autr svg path:nth-child(3) {
    display: block; }
  html .ico-4 #autr svg path, body .ico-4 #autr svg path {
    display: none; }
  html .ico-4 #autr svg path:nth-child(4), body .ico-4 #autr svg path:nth-child(4) {
    display: block; }
  html .ico-5 #autr svg path, body .ico-5 #autr svg path {
    display: none; }
  html .ico-5 #autr svg path:nth-child(5), body .ico-5 #autr svg path:nth-child(5) {
    display: block; }
  html .ico-6 #autr svg path, body .ico-6 #autr svg path {
    display: none; }
  html .ico-6 #autr svg path:nth-child(6), body .ico-6 #autr svg path:nth-child(6) {
    display: block; }
  html .ico-7 #autr svg path, body .ico-7 #autr svg path {
    display: none; }
  html .ico-7 #autr svg path:nth-child(7), body .ico-7 #autr svg path:nth-child(7) {
    display: block; }
  html .ico-8 #autr svg path, body .ico-8 #autr svg path {
    display: none; }
  html .ico-8 #autr svg path:nth-child(8), body .ico-8 #autr svg path:nth-child(8) {
    display: block; }
  html .ico-9 #autr svg path, body .ico-9 #autr svg path {
    display: none; }
  html .ico-9 #autr svg path:nth-child(9), body .ico-9 #autr svg path:nth-child(9) {
    display: block; }
  html .ico-10 #autr svg path, body .ico-10 #autr svg path {
    display: none; }
  html .ico-10 #autr svg path:nth-child(10), body .ico-10 #autr svg path:nth-child(10) {
    display: block; }
  html .media, body .media {
    line-height: 0px !important; }
    html .media *, html .media img, body .media *, body .media img {
      line-height: 0px !important;
      font-size: 0px !important; }
    html .media .vimeo iframe, body .media .vimeo iframe {
      width: 100%;
      height: 100%;
      z-index: 77;
      position: absolute; }
