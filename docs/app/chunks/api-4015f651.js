var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,s=(t,r,n)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[r]=n,i=(e,t)=>{for(var r in t||(t={}))a.call(t,r)&&s(e,r,t[r]);if(n)for(var r of n(t))o.call(t,r)&&s(e,r,t[r]);return e},d=(e,n)=>t(e,r(n));const p=async(e,t)=>{"string"==typeof url&&(e={data:e});let r={};const n=Object.keys(e);for(let a=0;a<n.length;a++){const o=n[a],s=e[o],i=await t(s);if(!i.ok)return{error:new Error(r)};r[o]=await i.json()}return r},l=e=>{const{date:t,text:r,media:n,embed:a,id:o}=e;return{date:t,text:r,media:n,embed:a,id:o}},c=async e=>(await p({posts:"/posts.json"},e)).posts.filter((e=>"published"==e.status)).sort(((e,t)=>t.date-e.date)).map(l),y={get:p,feed:c,post:async(e,t)=>{const{year:r,id:n}=e;let a=await c(t);const o=a.find((e=>e.id==n)),s=a.indexOf(a.sort(((e,t)=>t.date-e.date)).find((e=>e.id==o.id)));let p=0==s?a.length-1:s-1,l=s>=a.length-1?0:s+1,y=Math.round(Math.random()*(a.length-1));return p=d(i({},a[p]),{hyperlink:"prev"}),l=d(i({},a[l]),{hyperlink:"next"}),y=d(i({},a[y]),{hyperlink:"random"}),{post:o,prev:p,next:l,random:y}}};export{y as a};
